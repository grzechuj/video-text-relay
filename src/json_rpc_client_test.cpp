
#include <jsonrpc/rpc.h>
#include <iostream>
#include <string>
#include <iostream>
#include <cstdlib>

//Include client interface generated by tooling
#include "rpcstubclient.h"

using namespace jsonrpc;
using namespace std;

int main(int argc, char* argv[])
{
	RPCStubClient c(new HttpClient("http://localhost:8080"));

	//TBH I'd like to introduce a boost library to parse arguments
	//but to keep dependencies down for the moment, we'll do this in a naieve way.
	std::string blurb = "Hello World...";
	int x = 100;
	int y = 100;
	std::string message_name = "DisplayOne";
	if(argc<=1)
	{
		cout<<"USAGE: json_rpc_client_test <string to display> <xpos> <ypos> <freindlyname for display item>"<<endl;
		cout<<"JSON RPC client currently attempts to pass data to (hard coded) http://localhost:8080"<<endl;
		exit(-1);
	}
	if(argc>1) {
		blurb = argv[1];
	}
	if(argc>2) {
		x = atoi(argv[2]);
	}
	if(argc>3) {
		y = atoi(argv[3]);
	}
	if(argc>4) {
		message_name = argv[4];
	}

	try
	{
			std::string response = c.ShowMessage(message_name, blurb, x, y);
		  cout<<"Server response to ShowMessage call: "<<response<<endl;
	}
	catch (JsonRpcException e)
	{
		  cerr << e.what() << endl;
	}
}

