/**
 * THIS FILE IS GENERATED BY jsonrpcstub, DO NOT CHANGE IT!!!!!
 */

#ifndef _RPCSTUBCLIENT_H_
#define _RPCSTUBCLIENT_H_

#include <jsonrpc/rpc.h>

class RPCStubClient
{
    public:
        RPCStubClient(jsonrpc::AbstractClientConnector* conn)
        {
            this->client = new jsonrpc::Client(conn);
        }
        ~RPCStubClient()
        {
            delete this->client;
        }

        std::string ShowMessage(const std::string& friendlyName, const std::string& msg, const int& x, const int& y) throw (jsonrpc::JsonRpcException)
        {
            Json::Value p;
            p["friendlyName"] = friendlyName; 
p["msg"] = msg; 
p["x"] = x; 
p["y"] = y; 

            Json::Value result = this->client->CallMethod("ShowMessage",p);
    if (result.isString())
        return result.asString();
     else 
         throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());

        }

    private:
        jsonrpc::Client* client;
};
#endif //_RPCSTUBCLIENT_H_
